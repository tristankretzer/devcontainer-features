name: "Release Development Container Features & generate documentation"
on:
    push:
        branches:
            - master

jobs:
    deploy:
        if: ${{ github.ref == 'refs/heads/master' }}

        runs-on: ubuntu-latest

        permissions:
            contents: write
            pull-requests: write
            packages: write

        steps:
            -   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            -   name: "Publish Features"
                uses: devcontainers/action@1082abd5d2bf3a11abccba70eef98df068277772 # v1.4.3
                with:
                    publish-features: "true"
                    base-path-to-features: "./src"
                    generate-docs: "true"

                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Create PR for Documentation
                id: push_image_info
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    set -e
                    echo "Start."
                    # Configure git and Push updates
                    git config --global user.email github-actions[bot]@users.noreply.github.com
                    git config --global user.name github-actions[bot]
                    git config pull.rebase false
                    branch=automated-documentation-update-$GITHUB_RUN_ID
                    git checkout -b $branch
                    message='docs: update documentations'
                    # Add / update and commit
                    git add */**/README.md
                    git commit -m 'docs: update documentations [skip ci]' || export NO_UPDATES=true
                    # Push
                    if [ "$NO_UPDATES" != "true" ] ; then
                        git push origin "$branch"
                        gh pr create --title "$message" --body "$message"
                    fi
